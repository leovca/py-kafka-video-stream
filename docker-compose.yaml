version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    build: .
    #image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "7071:7071"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.100.106
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml

  init-kafka:
    image: wurstmeister/kafka
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic topic1 --replication-factor 1 --partitions 1      

      echo -e 'Successfully created the following topics:'
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list
      "

  kafka-ui:
      image: provectuslabs/kafka-ui
      container_name: kafka-ui
      ports:
        - "8080:8080"
      depends_on:
        - kafka
      environment:
        - KAFKA_CLUSTERS_0_NAME=local
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092         

  prometheus:
      image: prom/prometheus:v2.26.0
      hostname: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'

  grafanaservice:
    image: grafana/grafana:7.5.5
    hostname: grafana
    ports:
      - "3000:3000"        